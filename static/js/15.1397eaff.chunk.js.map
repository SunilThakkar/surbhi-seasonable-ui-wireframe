{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/dom-helpers/esm/getComputedStyle.js","../node_modules/dom-helpers/esm/ownerWindow.js","../node_modules/dom-helpers/esm/hyphenate.js","../node_modules/dom-helpers/esm/hyphenateStyle.js","../node_modules/dom-helpers/esm/isTransform.js","../node_modules/dom-helpers/esm/css.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/transitionEnd.js","../node_modules/dom-helpers/esm/triggerEvent.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/transitionEndListener.js","../node_modules/react-bootstrap/esm/TransitionWrapper.js","../node_modules/react-bootstrap/esm/safeFindDOMNode.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/triggerBrowserReflow.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","views/manage-orders/NewOrderItemModal.js","views/manage-orders/NewOrder.js"],"names":["target","property","receiver","Reflect","get","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","value","useMounted","mounted","useRef","isMounted","current","useEffect","usePrevious","ref","useEventCallback","fn","useCommittedRef","useCallback","apply","arguments","useWillUnmount","onUnmount","valueRef","useUpdatedRef","window","document","createElement","optionsSupported","onceSupported","options","passive","once","canUseDOM","addEventListener","removeEventListener","e","node","eventName","handler","capture","wrappedHandler","__once","onceHandler","event","this","ownerDocument","size","scrollbarSize","recalc","scrollDiv","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","toFnRef","useMergedRefs","refA","refB","useMemo","a","b","mergeRefs","getComputedStyle","psuedoElement","doc","defaultView","ownerWindow","rUpper","msPattern","hyphenateStyleName","string","replace","toLowerCase","hyphenate","supportedTransforms","css","transforms","getPropertyValue","keys","forEach","key","test","isTransform","removeProperty","cssText","listen","emulateTransitionEnd","element","duration","padding","called","handle","setTimeout","bubbles","cancelable","createEvent","initEvent","dispatchEvent","triggerEvent","remove","clearTimeout","transitionEnd","str","mult","indexOf","parseFloat","parseDuration","removeEmulate","activeElement","active","nodeName","contains","context","compareDocumentPosition","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","modals","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","setAttribute","m","removeAttribute","assign","modal","modalIdx","length","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","Context","createContext","undefined","Provider","useWindow","useContext","resolveContainerRef","_ref","nodeType","manager","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","setBackdropRef","Modal","forwardRef","show","role","className","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","i","sourceKeys","_objectWithoutPropertiesLoose","onResolved","useState","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","prevShow","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","createPortal","_jsxs","displayName","Manager","toArray","Function","bind","slice","qsa","selector","querySelectorAll","replaceClassName","origClass","classToRemove","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","classList","baseVal","hasClass","marginProp","el","adjustAndStore","restore","transitionEndListener","delay","TransitionWrapper","addEndListener","childRef","nodeRef","mergedRef","attachRef","r","componentOrElement","findDOMNode","normalize","callback","param","handleEnter","handleEntering","handleEntered","handleExit","handleExiting","handleExited","handleAddEndListener","status","innerProps","cloneElement","fadeStyles","ENTERING","ENTERED","Fade","transitionClasses","isAppearing","offsetHeight","triggerBrowserReflow","classNames","defaultProps","timeout","mountOnEnter","createWithBsPrefix","ModalContext","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","propTypes","PropTypes","func","variant","oneOf","CloseButton","type","AbstractModalHeader","closeLabel","closeVariant","closeButton","handleClick","ModalHeader","DivStyledAsH4","divWithClassName","Component","animation","dialogAs","DialogTransition","dialogClassName","Dialog","ariaLabelledby","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useIsRTL","modalContext","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","NewOrderItemModal","handleItemQuantityInputValidation","values","errors","requiredFields","name","validationMessage","requiredFieldsElement","itemQuantity","handleSelectedItem","selectedItem","setState","isEditing","isOpen","buttonText","toggleNewOrderItemModal","isOrderItemSaving","Fragment","initialValues","itemId","enableReinitialize","validate","onSubmit","touched","handleChange","handleBlur","handleSubmit","setFieldValue","isValid","dirty","setFieldTouched","Form","noValidate","autoComplete","Row","Col","md","Group","Label","Typography","align","isClearable","cacheOptions","defaultOptions","isMulti","placeholder","onBlur","onChange","selectedOption","loadOptions","inputValue","newValues","map","currentValue","label","Control","required","itemQuantityName","Button","color","disabled","disableElevation","Spinner","as","NewOrder","makeAnimated","toggleIsNewOrderItemModalOpen","prevState","isNewOrderItemModalOpen","handleSelectedCustomer","selectedCustomer","orderItems","currentIndex","itemName","isOrderSaving","Grid","spacing","gridSpacing","item","xs","Card","Divider","handleReset","textAlign","striped","responsiveSm","borderless","hover","responsive","columns","field","rows","currentOrderItem","action","cursor","fontSize","title"],"mappings":"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","file":"static/js/15.1397eaff.chunk.js","sourcesContent":["import superPropBase from \"@babel/runtime/helpers/esm/superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","import ownerWindow from './ownerWindow';\n/**\n * Returns one or all computed style properties of an element.\n * \n * @param node the element\n * @param psuedoElement the style property\n */\n\nexport default function getComputedStyle(node, psuedoElement) {\n  return ownerWindow(node).getComputedStyle(node, psuedoElement);\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the owner window of a given element.\n * \n * @param node the element\n */\n\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc && doc.defaultView || window;\n}","var rUpper = /([A-Z])/g;\nexport default function hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nimport hyphenate from './hyphenate';\nvar msPattern = /^ms-/;\nexport default function hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}","var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\nexport default function isTransform(value) {\n  return !!(value && supportedTransforms.test(value));\n}","import getComputedStyle from './getComputedStyle';\nimport hyphenate from './hyphenateStyle';\nimport isTransform from './isTransform';\n\nfunction style(node, property) {\n  var css = '';\n  var transforms = '';\n\n  if (typeof property === 'string') {\n    return node.style.getPropertyValue(hyphenate(property)) || getComputedStyle(node).getPropertyValue(hyphenate(property));\n  }\n\n  Object.keys(property).forEach(function (key) {\n    var value = property[key];\n\n    if (!value && value !== 0) {\n      node.style.removeProperty(hyphenate(key));\n    } else if (isTransform(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += hyphenate(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += \"transform: \" + transforms + \";\";\n  }\n\n  node.style.cssText += \";\" + css;\n}\n\nexport default style;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import css from './css';\nimport listen from './listen';\nimport triggerEvent from './triggerEvent';\n\nfunction parseDuration(node) {\n  var str = css(node, 'transitionDuration') || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nfunction emulateTransitionEnd(element, duration, padding) {\n  if (padding === void 0) {\n    padding = 5;\n  }\n\n  var called = false;\n  var handle = setTimeout(function () {\n    if (!called) triggerEvent(element, 'transitionend', true);\n  }, duration + padding);\n  var remove = listen(element, 'transitionend', function () {\n    called = true;\n  }, {\n    once: true\n  });\n  return function () {\n    clearTimeout(handle);\n    remove();\n  };\n}\n\nexport default function transitionEnd(element, handler, duration, padding) {\n  if (duration == null) duration = parseDuration(element) || 0;\n  var removeEmulate = emulateTransitionEnd(element, duration, padding);\n  var remove = listen(element, 'transitionend', handler);\n  return function () {\n    removeEmulate();\n    remove();\n  };\n}","/**\n * Triggers an event on a given element.\n * \n * @param node the element\n * @param eventName the event name to trigger\n * @param bubbles whether the event should bubble up\n * @param cancelable whether the event should be cancelable\n */\nexport default function triggerEvent(node, eventName, bubbles, cancelable) {\n  if (bubbles === void 0) {\n    bubbles = false;\n  }\n\n  if (cancelable === void 0) {\n    cancelable = true;\n  }\n\n  if (node) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, bubbles, cancelable);\n    node.dispatchEvent(event);\n  }\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\n\nfunction parseDuration(node, property) {\n  const str = css(node, property) || '';\n  const mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nexport default function transitionEndListener(element, handler) {\n  const duration = parseDuration(element, 'transitionDuration');\n  const delay = parseDuration(element, 'transitionDelay');\n  const remove = transitionEnd(element, e => {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}","import React, { useCallback, useRef } from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst TransitionWrapper = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  addEndListener,\n  children,\n  childRef,\n  ...props\n}, ref) => {\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, childRef);\n\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return /*#__PURE__*/_jsx(Transition, {\n    ref: ref,\n    ...props,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    children: typeof children === 'function' ? (status, innerProps) => children(status, { ...innerProps,\n      ref: attachRef\n    }) : /*#__PURE__*/React.cloneElement(children, {\n      ref: attachRef\n    })\n  });\n});\nexport default TransitionWrapper;","import ReactDOM from 'react-dom';\nexport default function safeFindDOMNode(componentOrElement) {\n  if (componentOrElement && 'setState' in componentOrElement) {\n    return ReactDOM.findDOMNode(componentOrElement);\n  }\n\n  return componentOrElement != null ? componentOrElement : null;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  ...props\n}, ref) => {\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node, isAppearing);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","// reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\nexport default function triggerBrowserReflow(node) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  node.offsetHeight;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import React, { Component } from \"react\";\r\nimport { Col, Form, Modal, Row, Spinner } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport AsyncSelect from \"react-select/async\";\r\n\r\nclass NewOrderItemModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleItemQuantityInputValidation = (values = {}) => {\r\n    let errors = {};\r\n    const requiredFields = [\r\n      {\r\n        name: \"itemId\",\r\n        validationMessage: \"Item is Required\",\r\n      },\r\n      {\r\n        name: \"itemQuantity\",\r\n        validationMessage: \"Item Quantity is Required\",\r\n      },\r\n    ];\r\n    requiredFields.forEach((requiredFieldsElement) => {\r\n      if (\r\n        !values.hasOwnProperty(requiredFieldsElement.name) ||\r\n        values[requiredFieldsElement.name] === undefined ||\r\n        values[requiredFieldsElement.name] === null ||\r\n        values[requiredFieldsElement.name] === \"\"\r\n      ) {\r\n        errors = {\r\n          ...errors,\r\n          [requiredFieldsElement.name]: requiredFieldsElement.validationMessage,\r\n        };\r\n      }\r\n    });\r\n    if (values.hasOwnProperty(\"itemQuantity\") && values.itemQuantity <= 0) {\r\n      errors = {\r\n        ...errors,\r\n        itemQuantity: \"Item Quantity must be positive\",\r\n      };\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSelectedItem = (selectedItem) => {\r\n    this.setState({ selectedItem });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isEditing = false,\r\n      isOpen = false,\r\n      buttonText = \"Add\",\r\n      toggleNewOrderItemModal = () => {},\r\n      isOrderItemSaving = false,\r\n    } = this.props;\r\n    const { selectedItem = undefined } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Modal\r\n          show={isOpen}\r\n          onHide={toggleNewOrderItemModal}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          className={\"visible-modal\"}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add Item Quantity</Modal.Title>\r\n          </Modal.Header>\r\n          <Formik\r\n            initialValues={{\r\n              itemId: undefined,\r\n              itemQuantity: undefined,\r\n            }}\r\n            enableReinitialize={true}\r\n            validate={(values) =>\r\n              this.handleItemQuantityInputValidation(values)\r\n            }\r\n            onSubmit={(values) => {}}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              setFieldValue,\r\n              isValid,\r\n              dirty,\r\n              setFieldTouched,\r\n            }) => (\r\n              <>\r\n                <Form\r\n                  noValidate={true}\r\n                  autoComplete=\"off\"\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  {/*<BlockLoader blocking={isGetLoading}>*/}\r\n                  <Modal.Body>\r\n                    <Row className={\"mt-2\"}>\r\n                      <Col md={12}>\r\n                        <Form.Group>\r\n                          <Form.Label>\r\n                            <Typography variant=\"h5\" align=\"center\">\r\n                              New Order Item\r\n                            </Typography>\r\n                          </Form.Label>\r\n                          <AsyncSelect\r\n                            value={selectedItem}\r\n                            isClearable={false}\r\n                            cacheOptions\r\n                            defaultOptions\r\n                            isMulti={false}\r\n                            placeholder={\"Select Order New Item \"}\r\n                            onBlur={() => {\r\n                              setFieldTouched(\"itemId\", true);\r\n                            }}\r\n                            onChange={(selectedOption) => {\r\n                              {\r\n                                this.handleSelectedItem(\r\n                                  selectedOption || undefined\r\n                                );\r\n                                setFieldTouched(\r\n                                  \"itemId\",\r\n                                  selectedOption.value !== undefined\r\n                                );\r\n                                setFieldValue(\r\n                                  \"itemId\",\r\n                                  selectedOption.value || undefined\r\n                                );\r\n                              }\r\n                            }}\r\n                            loadOptions={(inputValue, callback) =>\r\n                              setTimeout(() => {\r\n                                const newValues = [\r\n                                  1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n                                ].map((currentValue) => {\r\n                                  return {\r\n                                    label: `Some Item ${currentValue}`,\r\n                                    value: `Some Item ${currentValue}`,\r\n                                  };\r\n                                });\r\n                                callback(newValues);\r\n                              }, 400)\r\n                            }\r\n                          />\r\n                          {touched.itemId && errors.itemId ? (\r\n                            <div className=\"text-danger\">{errors.itemId}</div>\r\n                          ) : null}\r\n                        </Form.Group>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <Form.Group>\r\n                          <Form.Label>\r\n                            <Typography variant=\"h5\" align=\"center\">\r\n                              Item Quantity\r\n                            </Typography>\r\n                          </Form.Label>\r\n                          <Form.Control\r\n                            required\r\n                            type=\"number\"\r\n                            name=\"itemQuantity\"\r\n                            placeholder=\"Enter Quantity to add\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.itemQuantityName}\r\n                            className={\r\n                              touched.itemQuantity && errors.itemQuantity\r\n                                ? \"error\"\r\n                                : null\r\n                            }\r\n                          />\r\n                          {touched.itemQuantity && errors.itemQuantity ? (\r\n                            <div className=\"text-danger\">\r\n                              {errors.itemQuantity}\r\n                            </div>\r\n                          ) : null}\r\n                        </Form.Group>\r\n                      </Col>\r\n                    </Row>\r\n                  </Modal.Body>\r\n                  {/*</BlockLoader>*/}\r\n                  <Modal.Footer>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={toggleNewOrderItemModal}\r\n                    >\r\n                      Close\r\n                    </Button>\r\n                    <Button\r\n                      className={\"ml-3\"}\r\n                      type={\"submit\"}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      disabled={!(isValid && dirty)}\r\n                      disableElevation\r\n                    >\r\n                      {buttonText}\r\n                      {isOrderItemSaving && (\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                          className={\"ml-2\"}\r\n                        />\r\n                      )}\r\n                    </Button>\r\n                  </Modal.Footer>\r\n                </Form>\r\n              </>\r\n            )}\r\n          </Formik>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewOrderItemModal;\r\n","import React, { Component } from \"react\";\r\nimport { gridSpacing } from \"../../store/constant\";\r\nimport { Button, Divider, Grid, Typography } from \"@mui/material\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport { Col, Form, Modal, Row, Spinner } from \"react-bootstrap\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport makeAnimated from \"react-select/animated/dist/react-select.esm\";\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\r\nimport NewOrderItemModal from \"./NewOrderItemModal\";\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nclass NewOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedCustomer: undefined,\r\n      orderItems: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((currentIndex) => {\r\n        return {\r\n          itemId: currentIndex,\r\n          itemName: `Some Item ${currentIndex}`,\r\n          itemQuantity: 1 + currentIndex,\r\n        };\r\n      }),\r\n      // orderItems: [],\r\n      isNewOrderItemModalOpen: false,\r\n    };\r\n  }\r\n\r\n  toggleIsNewOrderItemModalOpen = () =>\r\n    this.setState((prevState) => {\r\n      return {\r\n        isNewOrderItemModalOpen: !prevState.isNewOrderItemModalOpen,\r\n      };\r\n    });\r\n\r\n  handleSelectedCustomer = (selectedCustomer: Array) => {\r\n    this.setState({ selectedCustomer });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      buttonText = \"Place Order\",\r\n      isOrderSaving = false,\r\n      selectedCustomer = undefined,\r\n      orderItems = [],\r\n      isNewOrderItemModalOpen = false,\r\n    } = this.state;\r\n    return (\r\n      <Grid container spacing={gridSpacing}>\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>\r\n                <div className={\"d-flex\"}>\r\n                  <h5 className=\"table-title\">Add New Order</h5>\r\n                </div>\r\n              </Card.Title>\r\n              <Divider />\r\n              <Formik\r\n                initialValues={{}}\r\n                enableReinitialize={true}\r\n                validate={(values) => {}}\r\n                onSubmit={(values) => {}}\r\n              >\r\n                {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isValid,\r\n                  dirty,\r\n                  handleReset,\r\n                }) => (\r\n                  <>\r\n                    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                      {/*<BlockLoader blocking={isGetLoading}>*/}\r\n                      <Row className={\"mt-2\"}>\r\n                        <Col md={12}>\r\n                          <Form.Group>\r\n                            <Form.Label>\r\n                              <Typography variant=\"h5\" align=\"center\">\r\n                                Customer\r\n                              </Typography>\r\n                            </Form.Label>\r\n                            <AsyncSelect\r\n                              value={selectedCustomer}\r\n                              isClearable={false}\r\n                              cacheOptions\r\n                              defaultOptions\r\n                              isMulti={false}\r\n                              placeholder={\"Select Customer\"}\r\n                              onChange={(selectedOption) => {\r\n                                this.handleSelectedCustomer(\r\n                                  selectedOption || undefined\r\n                                );\r\n                              }}\r\n                              loadOptions={(inputValue, callback) =>\r\n                                setTimeout(() => {\r\n                                  const newValues = [\r\n                                    1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n                                  ].map((currentValue) => {\r\n                                    return {\r\n                                      label: `SomeCustomer ${currentValue}`,\r\n                                      value: `SomeCustomer ${currentValue}`,\r\n                                    };\r\n                                  });\r\n                                  callback(newValues);\r\n                                }, 400)\r\n                              }\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                      {selectedCustomer && orderItems && (\r\n                        <div className={\"mt-2\"}>\r\n                          <Form.Group>\r\n                            <Form.Label>\r\n                              <Typography variant=\"h5\" align=\"center\">\r\n                                Order Items\r\n                              </Typography>\r\n                            </Form.Label>\r\n                          </Form.Group>\r\n                          {orderItems && orderItems.length < 1 && (\r\n                            <span style={{ textAlign: \"center\" }}>\r\n                              <Typography variant=\"h3\" align=\"center\">\r\n                                Add Atleast One Item to this Order\r\n                              </Typography>\r\n                            </span>\r\n                          )}\r\n                          {orderItems && orderItems.length >= 1 && (\r\n                            <MDBTable\r\n                              striped={true}\r\n                              responsiveSm={true}\r\n                              borderless\r\n                              hover\r\n                              responsive\r\n                            >\r\n                              <MDBTableHead\r\n                                columns={[\r\n                                  {\r\n                                    label: \"Item Id\",\r\n                                    field: \"itemId\",\r\n                                  },\r\n                                  {\r\n                                    label: \"Item Name\",\r\n                                    field: \"itemName\",\r\n                                  },\r\n                                  {\r\n                                    label: \"Item Quantity\",\r\n                                    field: \"itemQuantity\",\r\n                                  },\r\n                                  {\r\n                                    label: \"Action\",\r\n                                    field: \"action\",\r\n                                  },\r\n                                ]}\r\n                              />\r\n                              <MDBTableBody\r\n                                rows={orderItems.map((currentOrderItem) => {\r\n                                  const { itemId, itemName, itemQuantity } =\r\n                                    currentOrderItem;\r\n                                  return {\r\n                                    itemId,\r\n                                    itemName,\r\n                                    itemQuantity,\r\n                                    action: (\r\n                                      <>\r\n                                        <i\r\n                                          className={\r\n                                            \"fas fa-pencil-alt ms-3 text-warning\"\r\n                                          }\r\n                                          style={{\r\n                                            cursor: \"pointer\",\r\n                                            fontSize: \"15px\",\r\n                                          }}\r\n                                          title={`Edit Order Item Quantity`}\r\n                                        />\r\n                                        <i\r\n                                          className={\r\n                                            \"fas fa-trash ms-3 text-danger\"\r\n                                          }\r\n                                          style={{\r\n                                            cursor: \"pointer\",\r\n                                            fontSize: \"15px\",\r\n                                          }}\r\n                                          title={`Delete Order Item`}\r\n                                        />\r\n                                      </>\r\n                                    ),\r\n                                  };\r\n                                })}\r\n                              />\r\n                            </MDBTable>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                      <Row className={\"mt-5\"}>\r\n                        <Col md={11}>\r\n                          <i\r\n                            className={\"fas fa-plus ms-3 text-primary\"}\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              fontSize: \"30px\",\r\n                            }}\r\n                            title={`Add Order Item`}\r\n                            onClick={() => {\r\n                              if (selectedCustomer) {\r\n                                this.toggleIsNewOrderItemModalOpen();\r\n                              }\r\n                            }}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      {/*</BlockLoader>*/}\r\n                      <Row className={\"mt-2\"}>\r\n                        <Col md={4} />\r\n                        <Col>\r\n                          <Button\r\n                            className={\"ms-3\"}\r\n                            type={\"submit\"}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disableElevation\r\n                          >\r\n                            {buttonText}\r\n                            {isOrderSaving && (\r\n                              <Spinner\r\n                                as=\"span\"\r\n                                animation=\"border\"\r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                                className={\"ms-2\"}\r\n                              />\r\n                            )}\r\n                          </Button>\r\n                        </Col>\r\n                        <Col md={4} />\r\n                      </Row>\r\n                    </Form>\r\n                  </>\r\n                )}\r\n              </Formik>\r\n              {isNewOrderItemModalOpen && (\r\n                <NewOrderItemModal\r\n                  isOpen={isNewOrderItemModalOpen}\r\n                  toggleNewOrderItemModal={() =>\r\n                    this.toggleIsNewOrderItemModalOpen()\r\n                  }\r\n                />\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewOrder;\r\n"],"sourceRoot":""}