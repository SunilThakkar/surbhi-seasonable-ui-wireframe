{"version":3,"sources":["ui-component/Pagination/Pagination.js","ui-component/DataTable/DataTable.js","../node_modules/webpack/buildin/global.js","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","views/manage-orders/ManageOrdersPage.js"],"names":["LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","push","Pagination","props","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","totalPages","pageLimit","totalRecords","handleClick","evt","preventDefault","handleMoveLeft","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","length","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","ceil","this","className","onClick","event","map","index","href","e","Component","dataTablePaginationOptions","paginationValue","label","String","value","isNaN","DataTable","generateRequestData","searchValue","pageNo","pageSize","sortAs","sortBy","data","onSearchTable","query","target","callListAPI","clearTimeout","timer","setTimeout","limitChange","handleSorting","generateTableHeader","columns","ths","column","style","sortValue","undefined","sortIcon","nextSortBy","role","totalCounts","startEntry","isGetLoading","tableData","width","isClearable","name","options","onChange","selectedOption","nextPageSize","onKeyUp","onBlur","placeholder","bsSize","type","Spinner","animation","textAlign","striped","responsiveSm","borderless","hover","responsive","rows","React","defaultProps","tableHeaders","sortedColumn","g","Function","window","module","exports","getSwitchUtilityClass","slot","generateUtilityClass","switchClasses","generateUtilityClasses","_excluded","SwitchRoot","styled","overridesResolver","styles","ownerState","root","edge","capitalize","size","_extends","display","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","thumb","switchBase","checked","transform","SwitchSwitchBase","SwitchBase","input","color","theme","top","left","palette","mode","common","white","grey","transition","transitions","create","duration","shortest","disabled","track","opacity","backgroundColor","alpha","action","active","hoverOpacity","main","lighten","darken","SwitchTrack","borderRadius","black","SwitchThumb","boxShadow","shadows","Switch","inProps","ref","useThemeProps","sx","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","icon","_jsx","_jsxs","clsx","children","checkedIcon","ManageOrdersPage","toggleIsAddOrderQuantityModalOpen","setState","prevState","isAddOrderQuantityModalOpen","toggleIsOrderQuantityHistoryModalOpen","isOrderQuantityHistoryModalOpen","getOrderTableColumns","field","sort","getOrderList","req","currentIndex","orderStatus","chipColor","no","customerName","orderDate","Date","toLocaleString","orderTotalItems","clickable","status","id","inputProps","cursor","fontSize","title","res","totalElements","pageable","state","updatedData","orderTableData","isLoading","isAlertDialogOpen","isAlertDialogLoading","alertDialogTitle","content","isOrderStatusChange","orderStatusChangeData","orderId","newOrderStatus","isOrderDelete","orderDeleteData","orderHistoryId","container","spacing","gridSpacing","item","xs","Body","Title"],"mappings":"sOAKMA,EAAY,OACZC,EAAa,QAEbC,EAAQ,SAACC,EAAMC,GAInB,IAJqC,IAAdC,EAAa,uDAAN,EAC1BC,EAAIH,EACFD,EAAQ,GAEPI,GAAKF,GACVF,EAAMK,KAAKD,GACXA,GAAKD,EAGP,OAAOH,GAuNMM,E,kDAnNb,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAiCRC,SAAW,SAACC,GACV,MAAqC,EAAKF,MAAlCG,oBAAR,MAAwB,SAACC,GAAD,OAAOA,GAA/B,GAIuB,CACrBC,YAHkBC,KAAKC,IAAI,EAAGD,KAAKE,IAAIN,EAAM,EAAKF,MAAMS,aAIxDA,WAAY,EAAKT,MAAMS,WACvBC,UAAW,EAAKA,UAChBC,aAAc,EAAKA,gBA3CJ,EAiDnBC,YAAc,SAACV,EAAMW,GACnBA,EAAIC,iBACJ,EAAKb,SAASC,IAnDG,EAsDnBa,eAAiB,SAACF,GAChBA,EAAIC,iBACJ,EAAKb,SAAS,EAAKD,MAAMK,YAAoC,EAAtB,EAAKW,eAAqB,IAxDhD,EA2DnBC,gBAAkB,SAACJ,GACjBA,EAAIC,iBACJ,EAAKb,SAAS,EAAKD,MAAMK,YAAoC,EAAtB,EAAKW,eAAqB,IA7DhD,EAgEnBE,iBAAmB,WACjB,IAAMT,EAAa,EAAKT,MAAMS,WACxBJ,EAAc,EAAKL,MAAMK,aAAe,EACxCW,EAAiB,EAAKA,eAEtBG,EAAqC,EAAtB,EAAKH,eAAqB,EAG/C,GAAIP,EAFgBU,EAAe,EAEL,CAC5B,IAAIC,EAAQ,GAENC,EAAYhB,EAAcW,EAC1BM,EAAajB,EAAcW,EAC3BO,EAAiBd,EAAa,EAE9Be,EAAYH,EAAY,EAAIA,EAAY,EACxCI,EAAUH,EAAaC,EAAiBD,EAAaC,EAKrDG,EAAoBP,GAH1BC,EAAQ3B,EAAM+B,EAAWC,IAEAE,OAC6B,EAEhDC,EAAYJ,EAAY,EACxBK,EAAaJ,EAAUF,EAEvBO,EAAgBvC,EAChBwC,EAAiBvC,EAEvB,GAAIoC,IAAcC,EAAY,CAC5B,IAAMG,EAAavC,EAAM+B,EAAYE,EAAmBF,EAAY,GACpEJ,EAAK,CAAIU,GAAJ,mBAAsBE,GAAtB,YAAqCZ,SACrC,IAAKQ,GAAaC,EAAY,CACnC,IAAMG,EAAavC,EAAMgC,EAAU,EAAGA,EAAUC,GAChDN,EAAK,sBAAOA,GAAP,YAAiBY,GAAjB,CAA6BD,SACzBH,GAAaC,IACtBT,EAAK,CAAIU,GAAJ,mBAAsBV,GAAtB,CAA6BW,KAEpC,MAAM,CAAE,GAAR,mBAAcX,GAAd,CAAqBX,IAEvB,OAAOhB,EAAM,EAAGgB,IAtGhB,MAKIT,EAJFW,oBADF,MACiB,KADjB,IAKIX,EAHFU,iBAFF,MAEc,GAFd,IAKIV,EAFFgB,sBAHF,MAGmB,EAHnB,IAKIhB,EADFS,kBAJF,MAIe,KAJf,EAFiB,OASjB,EAAKC,UAAiC,kBAAdA,EAAyBA,EAAY,GAC7D,EAAKC,aAAuC,kBAAjBA,EAA4BA,EAAe,EAEtE,EAAKK,eACuB,kBAAnBA,EACHV,KAAKC,IAAI,EAAGD,KAAKE,IAAIQ,EAAgB,IACrC,EAEN,EAAKP,WAAaA,GAEdH,KAAK2B,KAAK,EAAKtB,aAAe,EAAKD,WAnBtB,E,qDAyBnB,c,oBAkFA,WAAU,IAAD,OACP,IAAKwB,KAAKvB,aAAc,OAAO,KAI/B,MAAoCuB,KAAKlC,MAAjCK,EAAR,EAAQA,YAAaI,EAArB,EAAqBA,WACfW,EAAQc,KAAKhB,mBAEnB,OACE,cAAC,WAAD,UACE,qBAAK,aAAW,uBAAhB,SACE,qBAAIiB,UAAU,aAAd,UACG9B,EAAc,GACb,oBAAY8B,UAAU,YAAtB,SACE,oBACEA,UAAU,YACV,aAAW,WACXC,QAAS,SAACC,GAAD,OAAW,EAAKzB,YAAYP,EAAc,EAAGgC,IAHxD,UAKE,sBAAM,cAAY,OAAlB,sBACA,sBAAMF,UAAU,kBAAhB,0BAPK,GAWVf,EAAMkB,KAAI,SAACpC,EAAMqC,GAChB,OAAIrC,IAASX,EAET,oBAAgB4C,UAAU,YAA1B,SACE,oBACEA,UAAU,YACVK,KAAK,IACL,aAAW,WACXJ,QAAS,EAAKrB,eAJhB,UAME,sBAAM,cAAY,OAAlB,kBACA,sBAAMoB,UAAU,kBAAhB,0BARKI,GAaTrC,IAASV,EAET,oBAAgB2C,UAAU,YAA1B,SACE,oBACEA,UAAU,YACVK,KAAK,IACL,aAAW,OACXJ,QAAS,EAAKnB,gBAJhB,UAME,sBAAM,cAAY,OAAlB,kBACA,sBAAMkB,UAAU,kBAAhB,sBARKI,GAcX,oBAEEJ,UAAS,mBACP9B,IAAgBH,EAAO,UAAY,IAHvC,SAMGG,IAAgBH,EACf,mBAAGiC,UAAU,YAAYK,KAAK,IAA9B,SACGtC,IAGH,mBACEiC,UAAU,YACVK,KAAK,IACLJ,QAAS,SAACK,GAAD,OAAO,EAAK7B,YAAYV,EAAMuC,IAHzC,SAKGvC,KAfAqC,MAqBVlC,EAAcI,GACb,oBAAY0B,UAAU,YAAtB,SACE,oBACEA,UAAU,YACV,aAAW,WACXC,QAAS,SAACC,GAAD,OAAW,EAAKzB,YAAYP,EAAc,EAAGgC,IAHxD,UAKE,sBAAM,cAAY,OAAlB,kBACA,sBAAMF,UAAU,kBAAhB,sBAPK,c,GA3LEO,a,SCXnBC,G,cAA6B,CAAC,GAAI,GAAI,GAAI,KAAKL,KAAI,SAACM,GACxD,MAAO,CACLC,MAAOC,OAAOF,GACdG,MAAOC,MAAMJ,GAAmB,GAAKA,OAInCK,E,4MAUJC,oBAAsB,SAACC,EAAaC,EAAQC,EAAUC,EAAQC,GAC5D,IAAIC,EAAO,CACTL,YAAaA,EACbC,OAAQA,EACRC,SAAUA,GAMZ,OAJIC,GAAUC,IACZC,EAAKF,OAASA,EACdE,EAAKD,OAASA,GAETC,G,EAOTC,cAAgB,SAACpB,GACf,IAAIqB,EAAQrB,EAAMsB,OAAOZ,MACzB,EAA+D,EAAK/C,MAA5DmD,EAAR,EAAQA,YAAaS,EAArB,EAAqBA,YAAaP,EAAlC,EAAkCA,SAAUC,EAA5C,EAA4CA,OAAQC,EAApD,EAAoDA,OAChDG,IAAUP,IACZU,aAAa,EAAKC,OAClB,EAAKA,MAAQC,YACX,kBACEH,EACE,EAAKV,oBAAoBQ,EAAO,EAAGL,EAAUC,EAAQC,MAEzD,O,EASNS,YAAc,SAACX,GACb,MAAqD,EAAKrD,MAAlDsD,EAAR,EAAQA,OAAQH,EAAhB,EAAgBA,YAAaS,EAA7B,EAA6BA,YAAaL,EAA1C,EAA0CA,OAC1CK,EACE,EAAKV,oBAAoBC,EAAa,EAAGE,EAAUC,EAAQC,K,EAQ/DpD,cAAgB,SAACqD,GACf,IAAQnD,EAAgBmD,EAAhBnD,YACR,EAA+D,EAAKL,MAA5DmD,EAAR,EAAQA,YAAaS,EAArB,EAAqBA,YAAaP,EAAlC,EAAkCA,SAAUC,EAA5C,EAA4CA,OAAQC,EAApD,EAAoDA,OACpDK,EACE,EAAKV,oBACHC,EACA9C,EAAc,EACdgD,EACAC,EACAC,K,EAUNU,cAAgB,SAACX,EAAQC,GACvB,MAA0D,EAAKvD,MAAvDmD,EAAR,EAAQA,YAAR,IAAqBS,mBAArB,MAAmC,aAAnC,EAA6CP,EAA7C,EAA6CA,SAC7CO,EACE,EAAKV,oBAAoBC,EAAa,EAAGE,EAAUC,EAAQC,K,EAS/DW,oBAAsB,WAAmB,IAAlBC,EAAiB,uDAAP,GAC/B,EAA2B,EAAKnE,MAAxBsD,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OACZa,EAAM,GA6BV,OA3BAD,EAAQ7B,KAAI,SAAC+B,EAAQ9B,GACnB,MAAiE8B,EAAzDC,aAAR,MAAgB,GAAhB,IAAiED,EAA7CE,iBAApB,WAAgCC,EAAhC,IAAiEH,EAAtBxB,aAA3C,WAAmD2B,EAAnD,EACIC,EAAW,mBACXC,EAAa,OAsBjB,OArBInB,IAAWgB,IACE,QAAXjB,EACFmB,EAAW,uBAEXC,EAAa,MACbD,EAAW,0BAGfL,EAAItE,KACF,qBAAgBwE,MAAK,eAAOA,GAA5B,UACGzB,EACA0B,GACC,qBAAKI,KAAK,SAASxC,UAAW,aAA9B,SACE,mBACEA,UAAWsC,EACXrC,QAAS,kBAAM,EAAK6B,cAAcS,EAAYH,UAN7ChC,IAYJ8B,KAEFD,G,4CAGT,WAAU,IAAD,OACP,EAQIlC,KAAKlC,MAPP4E,EADF,EACEA,YACAC,EAFF,EAEEA,WACAxB,EAHF,EAGEA,SACAD,EAJF,EAIEA,OACA0B,EALF,EAKEA,aACAC,EANF,EAMEA,UACAtE,EAPF,EAOEA,WAEF,OACE,qCACE,sBAAK0B,UAAW,SAAhB,UACE,sBAAKmC,MAAO,CAAEU,MAAO,SAArB,UACE,uBAAO7C,UAAW,YAAlB,0BACA,cAAC,IAAD,CACE8C,aAAa,EACbC,KAAK,UACLC,QAASxC,EACTI,MAAO,CAAEF,MAAOQ,EAAUN,MAAOM,GACjC+B,SAAU,SAACC,GACT,IAAMC,EACJD,GAAkBA,EAAetC,MAC7BsC,EAAetC,MACf,GACN,EAAKiB,YAAYsB,SAIvB,qBAAKnD,UAAW,eAAhB,SACE,qBAAKA,UAAW,SAAhB,SACE,sBAAMA,UAAW,OAAjB,SACE,cAAC,IAAD,CACEoD,QAASrD,KAAKuB,cACd+B,OAAQtD,KAAKuB,cACbgC,YAAa,SACbC,OAAQ,KACRC,KAAM,kBAMhB,qCACGb,GACC,qBAAK3C,UAAU,0BAAf,SACE,cAACyD,EAAA,EAAD,CAASC,UAAU,SAASlB,KAAK,SAAjC,SACE,sBAAMxC,UAAU,kBAAhB,6BAIJ2C,GAAgBF,EAAc,GAC9B,sBAAMN,MAAO,CAAEwB,UAAW,UAA1B,SACE,sDAGFhB,GAAgBF,GAAe,GAC/B,qCACE,8BACE,eAAC,IAAD,CACEmB,SAAS,EACTC,cAAc,EACdC,YAAU,EACVC,OAAK,EACLC,YAAU,EALZ,UAOE,cAAC,IAAD,UACE,6BAAKjE,KAAKgC,oBAAoBa,EAAUZ,aAE1C,cAAC,IAAD,CAAciC,KAAMrB,EAAUqB,YAGlC,2CACWvB,EADX,MAC0B,IACvBxB,GAAYD,EAAS,GAAKwB,EACvBvB,GAAYD,EAAS,GACrBwB,EAAa,IAJnB,MAKMA,EALN,WAME,sBAAMzC,UAAW,aAAjB,SACGyC,EACC,cAAC,EAAD,CACEjE,aAAciE,EACdlE,UAAWwB,KAAKlC,MAAMqD,SACtBrC,eAAgB,EAChBP,WAAYA,EACZN,cAAe+B,KAAK/B,cACpBE,YAAa6B,KAAKlC,MAAMoD,OAAS,IAGnC,+C,GAnNIiD,IAAM3D,WA8N9BO,EAAUqD,aAAe,CACvB1B,YAAa,EACbC,WAAY,EACZxB,SAAU,GACVD,OAAQ,EACR3C,WAAY,EACZqE,cAAc,EACdC,UAAW,CAAEqB,KAAM,GAAIjC,QAAS,IAChCoC,aAAc,GACdC,aAAc,GACdjD,OAAQ,GACRD,OAAQ,MACRH,YAAa,GACbS,YAAa,cAEAX,O,8DC7Pf,IAAIwD,EAGJA,EAAK,WACJ,OAAOvE,KADH,GAIL,IAECuE,EAAIA,GAAK,IAAIC,SAAS,cAAb,GACR,MAAOjE,GAEc,kBAAXkE,SAAqBF,EAAIE,QAOrCC,EAAOC,QAAUJ,G,8IClBV,SAASK,EAAsBC,GACpC,OAAOC,YAAqB,YAAaD,GAE3C,IACeE,EADOC,YAAuB,YAAa,CAAC,OAAQ,YAAa,UAAW,aAAc,eAAgB,iBAAkB,YAAa,aAAc,UAAW,WAAY,QAAS,QAAS,U,OCFzMC,EAAY,CAAC,YAAa,QAAS,OAAQ,OAAQ,MAoCnDC,EAAaC,YAAO,OAAQ,CAChCnC,KAAM,YACN6B,KAAM,OACNO,kBAAmB,SAACtH,EAAOuH,GACzB,IACEC,EACExH,EADFwH,WAEF,MAAO,CAACD,EAAOE,KAAMD,EAAWE,MAAQH,EAAO,OAAD,OAAQI,YAAWH,EAAWE,QAAUH,EAAO,OAAD,OAAQI,YAAWH,EAAWI,WAP3GP,EAShB,kBACDG,EADC,EACDA,WADC,OAEGK,YAAS,CACbC,QAAS,cACT9C,MAAO,GACP+C,OAAQ,GACRC,SAAU,SACVC,QAAS,GACTC,UAAW,aACXC,SAAU,WACVC,WAAY,EACZC,OAAQ,EAERC,cAAe,SAEf,eAAgB,CACdC,YAAa,UAEM,UAApBf,EAAWE,MAAoB,CAChCc,YAAa,GACQ,QAApBhB,EAAWE,MAAkB,CAC9Be,aAAc,GACO,UAApBjB,EAAWI,OAAX,GACD5C,MAAO,GACP+C,OAAQ,GACRE,QAAS,GAHR,2BAIMhB,EAAcyB,OAAU,CAC7B1D,MAAO,GACP+C,OAAQ,KANT,2BAQMd,EAAc0B,YARpB,aASCV,QAAS,GATV,YAUOhB,EAAc2B,SAAY,CAC9BC,UAAW,sBAXd,OAeGC,EAAmBzB,YAAO0B,IAAY,CAC1C7D,KAAM,YACN6B,KAAM,aACNO,kBAAmB,SAACtH,EAAOuH,GACzB,IACEC,EACExH,EADFwH,WAEF,MAAO,CAACD,EAAOoB,WAAR,4BACE1B,EAAc+B,OAAUzB,EAAOyB,OAChB,YAArBxB,EAAWyB,OAAuB1B,EAAO,QAAD,OAASI,YAAWH,EAAWyB,YATrD5B,EAWtB,kBACD6B,EADC,EACDA,MADC,UAGDf,SAAU,WACVgB,IAAK,EACLC,KAAM,EACNf,OAAQ,EAERY,MAA8B,UAAvBC,EAAMG,QAAQC,KAAmBJ,EAAMG,QAAQE,OAAOC,MAAQN,EAAMG,QAAQI,KAAK,KACxFC,WAAYR,EAAMS,YAAYC,OAAO,CAAC,OAAQ,aAAc,CAC1DC,SAAUX,EAAMS,YAAYE,SAASC,YAVtC,0BAYK7C,EAAc2B,SAAY,CAC9BC,UAAW,qBAbZ,0BAeK5B,EAAc8C,UAAa,CAC/Bd,MAA8B,UAAvBC,EAAMG,QAAQC,KAAmBJ,EAAMG,QAAQI,KAAK,KAAOP,EAAMG,QAAQI,KAAK,OAhBtF,0BAkBKxC,EAAc2B,QAlBnB,eAkBiC3B,EAAc+C,OAAU,CACxDC,QAAS,KAnBV,0BAqBKhD,EAAc8C,SArBnB,eAqBkC9C,EAAc+C,OAAU,CACzDC,QAAgC,UAAvBf,EAAMG,QAAQC,KAAmB,IAAO,KAtBlD,2BAwBMrC,EAAc+B,OAAU,CAC7BI,KAAM,QACNpE,MAAO,SA1BR,KA4BC,kBACFkE,EADE,EACFA,MACA1B,EAFE,EAEFA,WAFE,OAGEK,YAAS,CACb,UAAW,CACTqC,gBAAiBC,YAAMjB,EAAMG,QAAQe,OAAOC,OAAQnB,EAAMG,QAAQe,OAAOE,cAEzE,uBAAwB,CACtBJ,gBAAiB,iBAGC,YAArB1C,EAAWyB,QAAX,+BACKhC,EAAc2B,SADnB,aAECK,MAAOC,EAAMG,QAAQ7B,EAAWyB,OAAOsB,KACvC,UAAW,CACTL,gBAAiBC,YAAMjB,EAAMG,QAAQ7B,EAAWyB,OAAOsB,KAAMrB,EAAMG,QAAQe,OAAOE,cAClF,uBAAwB,CACtBJ,gBAAiB,iBANtB,YASOjD,EAAc8C,UAAa,CAC/Bd,MAA8B,UAAvBC,EAAMG,QAAQC,KAAmBkB,YAAQtB,EAAMG,QAAQ7B,EAAWyB,OAAOsB,KAAM,KAAQE,YAAOvB,EAAMG,QAAQ7B,EAAWyB,OAAOsB,KAAM,QAV9I,0BAaKtD,EAAc2B,QAbnB,eAaiC3B,EAAc+C,OAAU,CACxDE,gBAAiBhB,EAAMG,QAAQ7B,EAAWyB,OAAOsB,OAdlD,OAiBGG,EAAcrD,YAAO,OAAQ,CACjCnC,KAAM,YACN6B,KAAM,QACNO,kBAAmB,SAACtH,EAAOuH,GAAR,OAAmBA,EAAOyC,QAH3B3C,EAIjB,gBACD6B,EADC,EACDA,MADC,MAEI,CACLnB,OAAQ,OACR/C,MAAO,OACP2F,aAAc,EACdtC,QAAS,EACTqB,WAAYR,EAAMS,YAAYC,OAAO,CAAC,UAAW,oBAAqB,CACpEC,SAAUX,EAAMS,YAAYE,SAASC,WAEvCI,gBAAwC,UAAvBhB,EAAMG,QAAQC,KAAmBJ,EAAMG,QAAQE,OAAOqB,MAAQ1B,EAAMG,QAAQE,OAAOC,MACpGS,QAAgC,UAAvBf,EAAMG,QAAQC,KAAmB,IAAO,OAE7CuB,EAAcxD,YAAO,OAAQ,CACjCnC,KAAM,YACN6B,KAAM,QACNO,kBAAmB,SAACtH,EAAOuH,GAAR,OAAmBA,EAAOmB,QAH3BrB,EAIjB,kBAEI,CACLyD,UAHC,EACD5B,MAEiB6B,QAAQ,GACzBb,gBAAiB,eACjBlF,MAAO,GACP+C,OAAQ,GACR4C,aAAc,UAEVK,EAAsB3E,cAAiB,SAAgB4E,EAASC,GACpE,IAAMlL,EAAQmL,YAAc,CAC1BnL,MAAOiL,EACP/F,KAAM,cAIN/C,EAKEnC,EALFmC,UADF,EAMInC,EAJFiJ,aAFF,MAEU,UAFV,IAMIjJ,EAHF0H,YAHF,WAMI1H,EAFF4H,YAJF,MAIS,SAJT,EAKEwD,EACEpL,EADFoL,GAEIC,EAAQC,YAA8BtL,EAAOmH,GAE7CK,EAAaK,YAAS,GAAI7H,EAAO,CACrCiJ,QACAvB,OACAE,SAGI2D,EAxLkB,SAAA/D,GACxB,IACE+D,EAME/D,EANF+D,QACA7D,EAKEF,EALFE,KACAE,EAIEJ,EAJFI,KACAqB,EAGEzB,EAHFyB,MACAL,EAEEpB,EAFFoB,QACAmB,EACEvC,EADFuC,SAEIyB,EAAQ,CACZ/D,KAAM,CAAC,OAAQC,GAAQ,OAAJ,OAAWC,YAAWD,IAAnC,cAAmDC,YAAWC,KACpEe,WAAY,CAAC,aAAD,eAAuBhB,YAAWsB,IAAUL,GAAW,UAAWmB,GAAY,YAC1FrB,MAAO,CAAC,SACRsB,MAAO,CAAC,SACRhB,MAAO,CAAC,UAEJyC,EAAkBC,YAAeF,EAAO1E,EAAuByE,GACrE,OAAO1D,YAAS,GAAI0D,EAASE,GAuKbE,CAAkBnE,GAE5BoE,EAAoBC,cAAKhB,EAAa,CAC1C1I,UAAWoJ,EAAQ7C,MACnBlB,WAAYA,IAGd,OAAoBsE,eAAM1E,EAAY,CACpCjF,UAAW4J,YAAKR,EAAQ9D,KAAMtF,GAC9BiJ,GAAIA,EACJ5D,WAAYA,EACZwE,SAAU,CAAcH,cAAK/C,EAAkBjB,YAAS,CACtDlC,KAAM,WACNiG,KAAMA,EACNK,YAAaL,EACbV,IAAKA,EACL1D,WAAYA,GACX6D,EAAO,CACRE,QAAS1D,YAAS,GAAI0D,EAAS,CAC7B9D,KAAM8D,EAAQ5C,gBAEAkD,cAAKnB,EAAa,CAClCvI,UAAWoJ,EAAQvB,MACnBxC,WAAYA,UAsHHwD,O,0KCjVTkB,E,kDACJ,WAAYlM,GAAQ,IAAD,8BACjB,cAAMA,IAsCRmM,kCAAoC,kBAClC,EAAKC,UAAS,SAACC,GACb,MAAO,CACLC,6BAA8BD,EAAUC,iCA1C3B,EA8CnBC,sCAAwC,kBACtC,EAAKH,UAAS,SAACC,GACb,MAAO,CACLG,iCACGH,EAAUG,qCAlDA,EAsDnBC,qBAAuB,WACrB,MAAO,CACL,CACE5J,MAAO,MACP6J,MAAO,KACPC,KAAM,OAER,CACE9J,MAAO,gBACP6J,MAAO,eACPnI,UAAW,iBAEb,CACE1B,MAAO,aACP6J,MAAO,YACPnI,UAAW,oBAEb,CACE1B,MAAO,oBACP6J,MAAO,kBACPnI,UAAW,qBAEb,CACE1B,MAAO,eACP6J,MAAO,cACPnI,UAAW,gBAEb,CACE1B,MAAO,SACP6J,MAAO,UAET,CACE7J,MAAO,SACP6J,MAAO,YAvFM,EA4FnBE,aAAe,SAACC,GACd,EAAKT,SACH,CACEtH,cAAc,IAEhB,WACM+H,GAAOA,EAAIvJ,SAAWuJ,EAAItJ,eACrBsJ,EAAG,OAGZ9I,YAAW,WACT,IAAIqC,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAI9D,KAAI,SAACwK,GAC9C,IAAMC,EAAcD,EAAe,IAAM,EACrCE,EAAY,OAUhB,OATKD,IACHC,EAAY,SAEVF,EAAe,IAAM,IACvBE,EAAY,WAEVF,EAAe,IAAM,IACvBE,EAAY,WAEP,CACLC,GAAIH,EACJI,aAAc,aACdC,WAAW,IAAIC,MAAOC,iBACtBC,gBAAiB,IACjBP,YACE,mCACE,cAAC,IAAD,CACElK,MAAO,cACPoG,MAAO+D,EACPpF,KAAM,SACN2F,WAAW,MAIjBC,OACE,8BACE,cAAC,IAAD,CACE5E,QAASmE,EACT9D,MAAM,UACN/D,KAAI,sBAAiB4H,GACrBW,GAAE,sBAAiBX,GACnBY,WAAY,CAAE,aAAc,wBAIlCtD,OACE,mCACE,sBAAKjI,UAAW,cAAhB,UACG4K,GACC,mBACE5K,UAAW,mCACXmC,MAAO,CAAEqJ,OAAQ,UAAWC,SAAU,QACtCC,MAAK,qBAGRd,GACC,mBACE5K,UAAW,gCACXmC,MAAO,CAAEqJ,OAAQ,UAAWC,SAAU,QACtCC,MAAK,0BAQfC,EACI,CACJC,cAAe,GACftN,WAAY,GAGZuN,EACQ,GADRA,EAEU,EAEVnJ,EAAamJ,EAAsB,EAAKC,MAAM5K,SAAW,EACzD6K,EAAc,CAChBC,eAAgB,CACd/H,OACAjC,QAAQ,YAAK,EAAKsI,yBAEpBpJ,SAAU2K,EACVpJ,YAAakJ,EAASC,cACtBlJ,WAAYA,EACZzB,OAAQ4K,EACRvN,WAAYqN,EAASrN,WACrBqE,cAAc,GAEhBoJ,EAAY/K,YAAc0J,EAAI1J,aAAe,GACzC0J,EAAIvJ,QAAUuJ,EAAItJ,SACpB2K,EAAW,OAAarB,EAAItJ,OAC5B2K,EAAW,OAAarB,EAAIvJ,QAE9B,EAAK8I,SAAL,eAAmB8B,MAClB,UA9LP,EAAKD,MAAQ,CACXnJ,cAAc,EACdsJ,WAAW,EACX/K,SAAU,GACVD,OAAQ,EACRE,OAAQ,MACRH,YAAa,GACb0B,WAAY,EACZD,YAAa,EACbnE,WAAY,EACZ0N,eAAgB,CACd/H,KAAM,GACNjC,QAAS,EAAKsI,wBAEhB4B,mBAAmB,EACnBC,sBAAsB,EACtBC,iBAAkB,eAClBC,QAAS,iCACTC,qBAAqB,EACrBC,sBAAuB,CACrBC,aAASnK,EACToK,oBAAgBpK,GAElBqK,eAAe,EACfC,gBAAiB,CACfH,aAASnK,GAEX8H,6BAA6B,EAC7BE,iCAAiC,EACjCuC,oBAAgBvK,GA/BD,E,qDAmCnB,WACEtC,KAAK0K,aAAa,CAAExJ,OAAQ,EAAGC,SAAU,O,oBAiK3C,WACE,MAkBInB,KAAK+L,MAjBPrJ,EADF,EACEA,YACAC,EAFF,EAEEA,WACAxB,EAHF,EAGEA,SACAD,EAJF,EAIEA,OACA3C,EALF,EAKEA,WACAqE,EANF,EAMEA,aACAqJ,EAPF,EAOEA,eACA5K,EARF,EAQEA,OACAD,EATF,EASEA,OACAH,EAVF,EAUEA,YAVF,EAWEkL,kBAXF,EAYEC,qBAZF,EAaEC,iBAbF,EAcEC,QAdF,EAeElC,4BAfF,EAgBEE,gCAhBF,EAiBEuC,eAEF,OACE,cAAC,IAAD,CAAMC,WAAS,EAACC,QAASC,IAAzB,SACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAKC,KAAN,WACE,cAAC,IAAKC,MAAN,UACE,qBAAKnN,UAAW,SAAhB,SACE,oBAAIA,UAAU,cAAd,8BAWJ,cAAC,IAAD,IACA,cAAC,IAAD,CACEyC,YAAaA,EACbC,WAAYA,EACZxB,SAAUA,EACVD,OAAQA,EACR3C,WAAYA,EACZqE,aAAcA,EACdC,UAAWoJ,EACX5H,aAAcrE,KAAKuK,uBACnBjG,aAAc,GACdjD,OAAQA,EACRD,OAAQA,EACRH,YAAaA,EACbS,YAAa1B,KAAK0K,4B,GA1PHlK,aAoQhBwJ","file":"static/js/14.f839ead8.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Pagination.scss\";\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      totalRecords = null,\r\n      pageLimit = 10,\r\n      pageNeighbours = 0,\r\n      totalPages = null,\r\n    } = props;\r\n\r\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 10;\r\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n\r\n    this.pageNeighbours =\r\n      typeof pageNeighbours === \"number\"\r\n        ? Math.max(0, Math.min(pageNeighbours, 2))\r\n        : 0;\r\n\r\n    this.totalPages = totalPages\r\n      ? totalPages\r\n      : Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n    // this.state = { currentPage: 1 };\r\n    // this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.gotoPage(1);\r\n  }\r\n\r\n  // shouldComponentUpdate(nextProps) {\r\n  //   const differentPageLimit = this.props.pageLimit !== nextProps.pageLimit;\r\n  //   return differentPageLimit;\r\n  // }\r\n\r\n  gotoPage = (page) => {\r\n    const { onPageChanged = (f) => f } = this.props;\r\n\r\n    const currentPage = Math.max(0, Math.min(page, this.props.totalPages));\r\n\r\n    const paginationData = {\r\n      currentPage,\r\n      totalPages: this.props.totalPages,\r\n      pageLimit: this.pageLimit,\r\n      totalRecords: this.totalRecords,\r\n    };\r\n    onPageChanged(paginationData);\r\n    // this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n  };\r\n\r\n  handleClick = (page, evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(page);\r\n  };\r\n\r\n  handleMoveLeft = (evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.props.currentPage - this.pageNeighbours * 2 - 1);\r\n  };\r\n\r\n  handleMoveRight = (evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.props.currentPage + this.pageNeighbours * 2 + 1);\r\n  };\r\n\r\n  fetchPageNumbers = () => {\r\n    const totalPages = this.props.totalPages;\r\n    const currentPage = this.props.currentPage || 1;\r\n    const pageNeighbours = this.pageNeighbours;\r\n\r\n    const totalNumbers = this.pageNeighbours * 2 + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n      let pages = [];\r\n\r\n      const leftBound = currentPage - pageNeighbours;\r\n      const rightBound = currentPage + pageNeighbours;\r\n      const beforeLastPage = totalPages - 1;\r\n\r\n      const startPage = leftBound > 2 ? leftBound : 2;\r\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n      pages = range(startPage, endPage);\r\n\r\n      const pagesCount = pages.length;\r\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n      const leftSpill = startPage > 2;\r\n      const rightSpill = endPage < beforeLastPage;\r\n\r\n      const leftSpillPage = LEFT_PAGE;\r\n      const rightSpillPage = RIGHT_PAGE;\r\n\r\n      if (leftSpill && !rightSpill) {\r\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\r\n        pages = [leftSpillPage, ...extraPages, ...pages];\r\n      } else if (!leftSpill && rightSpill) {\r\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\r\n        pages = [...pages, ...extraPages, rightSpillPage];\r\n      } else if (leftSpill && rightSpill) {\r\n        pages = [leftSpillPage, ...pages, rightSpillPage];\r\n      }\r\n      return [1, ...pages, totalPages];\r\n    }\r\n    return range(1, totalPages);\r\n  };\r\n\r\n  render() {\r\n    if (!this.totalRecords) return null;\r\n\r\n    // if (this.props.totalPages === 1) return null;\r\n\r\n    const { currentPage, totalPages } = this.props;\r\n    const pages = this.fetchPageNumbers();\r\n\r\n    return (\r\n      <Fragment>\r\n        <nav aria-label=\"Countries Pagination\">\r\n          <ul className=\"pagination\">\r\n            {currentPage > 1 && (\r\n              <li key={0} className=\"page-item\">\r\n                <a\r\n                  className=\"page-link\"\r\n                  aria-label=\"Previous\"\r\n                  onClick={(event) => this.handleClick(currentPage - 1, event)}\r\n                >\r\n                  <span aria-hidden=\"true\">Previous</span>\r\n                  <span className=\"visually-hidden\">Previous</span>\r\n                </a>\r\n              </li>\r\n            )}\r\n            {pages.map((page, index) => {\r\n              if (page === LEFT_PAGE)\r\n                return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      aria-label=\"Previous\"\r\n                      onClick={this.handleMoveLeft}\r\n                    >\r\n                      <span aria-hidden=\"true\">&laquo;</span>\r\n                      <span className=\"visually-hidden\">Previous</span>\r\n                    </a>\r\n                  </li>\r\n                );\r\n\r\n              if (page === RIGHT_PAGE)\r\n                return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      aria-label=\"Next\"\r\n                      onClick={this.handleMoveRight}\r\n                    >\r\n                      <span aria-hidden=\"true\">&raquo;</span>\r\n                      <span className=\"visually-hidden\">Next</span>\r\n                    </a>\r\n                  </li>\r\n                );\r\n\r\n              return (\r\n                <li\r\n                  key={index}\r\n                  className={`page-item${\r\n                    currentPage === page ? \" active\" : \"\"\r\n                  }`}\r\n                >\r\n                  {currentPage === page ? (\r\n                    <a className=\"page-link\" href=\"#\">\r\n                      {page}\r\n                    </a>\r\n                  ) : (\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      onClick={(e) => this.handleClick(page, e)}\r\n                    >\r\n                      {page}\r\n                    </a>\r\n                  )}\r\n                </li>\r\n              );\r\n            })}\r\n            {currentPage < totalPages && (\r\n              <li key={1} className=\"page-item\">\r\n                <a\r\n                  className=\"page-link\"\r\n                  aria-label=\"Previous\"\r\n                  onClick={(event) => this.handleClick(currentPage + 1, event)}\r\n                >\r\n                  <span aria-hidden=\"true\">Next</span>\r\n                  <span className=\"visually-hidden\">Next</span>\r\n                </a>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </nav>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalRecords: PropTypes.number.isRequired,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\nimport { Input } from \"reactstrap\";\nimport Pagination from \"../Pagination/Pagination\";\nimport Select from \"react-select\";\nimport \"./DataTable.scss\";\nimport Loader from \"../Loader\";\n\nconst dataTablePaginationOptions = [10, 20, 50, 100].map((paginationValue) => {\n  return {\n    label: String(paginationValue),\n    value: isNaN(paginationValue) ? 10 : paginationValue,\n  };\n});\n\nclass DataTable extends React.Component {\n  /**\n   * This will handle request data for calling list API\n   * @param searchValue {string}\n   * @param pageNo {number}\n   * @param pageSize {number}\n   * @param sortAs {string}\n   * @param sortBy {string}\n   * @return {{pageNo: *, pageSize: *, searchValue: *}}\n   */\n  generateRequestData = (searchValue, pageNo, pageSize, sortAs, sortBy) => {\n    let data = {\n      searchValue: searchValue,\n      pageNo: pageNo,\n      pageSize: pageSize,\n    };\n    if (sortAs && sortBy) {\n      data.sortAs = sortAs;\n      data.sortBy = sortBy;\n    }\n    return data;\n  };\n\n  /**\n   * This will handle onSearch table event\n   * @param event\n   */\n  onSearchTable = (event) => {\n    let query = event.target.value;\n    const { searchValue, callListAPI, pageSize, sortAs, sortBy } = this.props;\n    if (query !== searchValue) {\n      clearTimeout(this.timer);\n      this.timer = setTimeout(\n        () =>\n          callListAPI(\n            this.generateRequestData(query, 0, pageSize, sortAs, sortBy)\n          ),\n        400\n      );\n    }\n  };\n\n  /**\n   * This will handle limit change\n   * @param pageSize {number}\n   */\n  limitChange = (pageSize) => {\n    const { sortAs, searchValue, callListAPI, sortBy } = this.props;\n    callListAPI(\n      this.generateRequestData(searchValue, 0, pageSize, sortAs, sortBy)\n    );\n  };\n\n  /**\n   * This will handle page change value\n   * @param data\n   */\n  onPageChanged = (data) => {\n    const { currentPage } = data;\n    const { searchValue, callListAPI, pageSize, sortAs, sortBy } = this.props;\n    callListAPI(\n      this.generateRequestData(\n        searchValue,\n        currentPage - 1,\n        pageSize,\n        sortAs,\n        sortBy\n      )\n    );\n  };\n\n  /**\n   * This will handle sorting\n   * @param sortAs {string}\n   * @param sortBy {string}\n   */\n  handleSorting = (sortAs, sortBy) => {\n    const { searchValue, callListAPI = () => {}, pageSize } = this.props;\n    callListAPI(\n      this.generateRequestData(searchValue, 0, pageSize, sortAs, sortBy)\n    );\n  };\n\n  /**\n   * This will generate table columns\n   * @param columns {[{label : string, field : string, sortValue : string}]}\n   * @return {*[]}\n   */\n  generateTableHeader = (columns = []) => {\n    const { sortAs, sortBy } = this.props;\n    let ths = [];\n\n    columns.map((column, index) => {\n      const { style = {}, sortValue = undefined, label = undefined } = column;\n      let sortIcon = \"fas fa-sort ml-1\";\n      let nextSortBy = \"DESC\";\n      if (sortBy === sortValue) {\n        if (sortAs === \"ASC\") {\n          sortIcon = \"fas fa-sort-up ml-1\";\n        } else {\n          nextSortBy = \"ASC\";\n          sortIcon = \"fas fa-sort-down ml-1\";\n        }\n      }\n      ths.push(\n        <th key={index} style={{ ...style }}>\n          {label}\n          {sortValue && (\n            <div role=\"button\" className={\"pull-right\"}>\n              <i\n                className={sortIcon}\n                onClick={() => this.handleSorting(nextSortBy, sortValue)}\n              />\n            </div>\n          )}\n        </th>\n      );\n      return column;\n    });\n    return ths;\n  };\n\n  render() {\n    const {\n      totalCounts,\n      startEntry,\n      pageSize,\n      pageNo,\n      isGetLoading,\n      tableData,\n      totalPages,\n    } = this.props;\n    return (\n      <>\n        <div className={\"d-flex\"}>\n          <div style={{ width: \"150px\" }}>\n            <label className={\"mt-2 me-1\"}>Show entries</label>\n            <Select\n              isClearable={false}\n              name=\"Entries\"\n              options={dataTablePaginationOptions}\n              value={{ label: pageSize, value: pageSize }}\n              onChange={(selectedOption) => {\n                const nextPageSize =\n                  selectedOption && selectedOption.value\n                    ? selectedOption.value\n                    : 10;\n                this.limitChange(nextPageSize);\n              }}\n            />\n          </div>\n          <div className={\"ms-auto mt-4\"}>\n            <div className={\"d-flex\"}>\n              <span className={\"me-2\"}>\n                <Input\n                  onKeyUp={this.onSearchTable}\n                  onBlur={this.onSearchTable}\n                  placeholder={\"Search\"}\n                  bsSize={\"md\"}\n                  type={\"text\"}\n                />\n              </span>\n            </div>\n          </div>\n        </div>\n        <>\n          {isGetLoading && (\n            <div className=\"data-table-spinner mt-2\">\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </Spinner>\n            </div>\n          )}\n          {!isGetLoading && totalCounts < 1 && (\n            <span style={{ textAlign: \"center\" }}>\n              <h3>No Data Available</h3>\n            </span>\n          )}\n          {!isGetLoading && totalCounts >= 1 && (\n            <>\n              <div>\n                <MDBTable\n                  striped={true}\n                  responsiveSm={true}\n                  borderless\n                  hover\n                  responsive\n                >\n                  <MDBTableHead>\n                    <tr>{this.generateTableHeader(tableData.columns)}</tr>\n                  </MDBTableHead>\n                  <MDBTableBody rows={tableData.rows} />\n                </MDBTable>\n              </div>\n              <div>\n                Showing {startEntry} to{\" \"}\n                {pageSize * (pageNo + 1) < totalCounts\n                  ? pageSize * (pageNo + 1)\n                  : totalCounts}{\" \"}\n                of {totalCounts} entries\n                <span className={\"pull-right\"}>\n                  {totalCounts ? (\n                    <Pagination\n                      totalRecords={totalCounts}\n                      pageLimit={this.props.pageSize}\n                      pageNeighbours={1}\n                      totalPages={totalPages}\n                      onPageChanged={this.onPageChanged}\n                      currentPage={this.props.pageNo + 1}\n                    />\n                  ) : (\n                    <></>\n                  )}\n                </span>\n              </div>\n            </>\n          )}\n        </>\n      </>\n    );\n  }\n}\nDataTable.defaultProps = {\n  totalCounts: 0,\n  startEntry: 1,\n  pageSize: 10,\n  pageNo: 0,\n  totalPages: 1,\n  isGetLoading: false,\n  tableData: { rows: [], columns: [] },\n  tableHeaders: [],\n  sortedColumn: [],\n  sortBy: \"\",\n  sortAs: \"ASC\",\n  searchValue: \"\",\n  callListAPI: () => {},\n};\nexport default DataTable;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: theme.palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    edge = false,\n    size = 'medium',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","import React, { Component } from \"react\";\r\nimport { gridSpacing } from \"../../store/constant\";\r\nimport { Grid, Switch, Divider, Button, Typography, Chip } from \"@mui/material\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport DataTable from \"../../ui-component/DataTable/DataTable\";\r\n\r\nclass ManageOrdersPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isGetLoading: false,\r\n      isLoading: false,\r\n      pageSize: 10,\r\n      pageNo: 0,\r\n      sortAs: \"ASC\",\r\n      searchValue: \"\",\r\n      startEntry: 1,\r\n      totalCounts: 0,\r\n      totalPages: 1,\r\n      orderTableData: {\r\n        rows: [],\r\n        columns: this.getOrderTableColumns(),\r\n      },\r\n      isAlertDialogOpen: false,\r\n      isAlertDialogLoading: false,\r\n      alertDialogTitle: \"Confirmation\",\r\n      content: \"Do you really Want to Proceed?\",\r\n      isOrderStatusChange: false,\r\n      orderStatusChangeData: {\r\n        orderId: undefined,\r\n        newOrderStatus: undefined,\r\n      },\r\n      isOrderDelete: false,\r\n      orderDeleteData: {\r\n        orderId: undefined,\r\n      },\r\n      isAddOrderQuantityModalOpen: false,\r\n      isOrderQuantityHistoryModalOpen: false,\r\n      orderHistoryId: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    this.getOrderList({ pageNo: 0, pageSize: 10 });\r\n  }\r\n\r\n  toggleIsAddOrderQuantityModalOpen = () =>\r\n    this.setState((prevState) => {\r\n      return {\r\n        isAddOrderQuantityModalOpen: !prevState.isAddOrderQuantityModalOpen,\r\n      };\r\n    });\r\n\r\n  toggleIsOrderQuantityHistoryModalOpen = () =>\r\n    this.setState((prevState) => {\r\n      return {\r\n        isOrderQuantityHistoryModalOpen:\r\n          !prevState.isOrderQuantityHistoryModalOpen,\r\n      };\r\n    });\r\n\r\n  getOrderTableColumns = () => {\r\n    return [\r\n      {\r\n        label: \"Sr.\",\r\n        field: \"no\",\r\n        sort: \"asc\",\r\n      },\r\n      {\r\n        label: \"Customer Name\",\r\n        field: \"customerName\",\r\n        sortValue: \"CUSTOMER_NAME\",\r\n      },\r\n      {\r\n        label: \"Order Date\",\r\n        field: \"orderDate\",\r\n        sortValue: \"ITEM_DESCRIPTION\",\r\n      },\r\n      {\r\n        label: \"Order Total Items\",\r\n        field: \"orderTotalItems\",\r\n        sortValue: \"ORDER_TOTAL_ITEMS\",\r\n      },\r\n      {\r\n        label: \"Order Status\",\r\n        field: \"orderStatus\",\r\n        sortValue: \"ORDER_STATUS\",\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n      },\r\n    ];\r\n  };\r\n\r\n  getOrderList = (req) => {\r\n    this.setState(\r\n      {\r\n        isGetLoading: true,\r\n      },\r\n      () => {\r\n        if (req && req.sortAs && !req.sortBy) {\r\n          delete req[\"sortAs\"];\r\n        }\r\n\r\n        setTimeout(() => {\r\n          let rows = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((currentIndex) => {\r\n            const orderStatus = currentIndex % 2 === 0;\r\n            let chipColor = \"info\";\r\n            if (!orderStatus) {\r\n              chipColor = \"error\";\r\n            }\r\n            if (currentIndex % 3 === 0) {\r\n              chipColor = \"success\";\r\n            }\r\n            if (currentIndex % 5 === 0) {\r\n              chipColor = \"warning\";\r\n            }\r\n            return {\r\n              no: currentIndex,\r\n              customerName: \"Customer 1\",\r\n              orderDate: new Date().toLocaleString(),\r\n              orderTotalItems: \"5\",\r\n              orderStatus: (\r\n                <>\r\n                  <Chip\r\n                    label={\"Some Status\"}\r\n                    color={chipColor}\r\n                    size={\"medium\"}\r\n                    clickable={false}\r\n                  />\r\n                </>\r\n              ),\r\n              status: (\r\n                <div>\r\n                  <Switch\r\n                    checked={orderStatus}\r\n                    color=\"primary\"\r\n                    name={`orderStatus|${currentIndex}`}\r\n                    id={`orderStatus|${currentIndex}`}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                  />\r\n                </div>\r\n              ),\r\n              action: (\r\n                <>\r\n                  <div className={\"d-flex pt-2\"}>\r\n                    {orderStatus && (\r\n                      <i\r\n                        className={\"fas fa-history ms-3 text-success\"}\r\n                        style={{ cursor: \"pointer\", fontSize: \"15px\" }}\r\n                        title={`View Order Items`}\r\n                      />\r\n                    )}\r\n                    {orderStatus && (\r\n                      <i\r\n                        className={\"fas fa-trash ms-3 text-danger\"}\r\n                        style={{ cursor: \"pointer\", fontSize: \"15px\" }}\r\n                        title={`Delete Order`}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </>\r\n              ),\r\n            };\r\n          });\r\n          let res = {\r\n            data: {\r\n              totalElements: 15,\r\n              totalPages: 2,\r\n            },\r\n          };\r\n          let pageable = {\r\n            pageSize: 10,\r\n            pageNumber: 0,\r\n          };\r\n          let startEntry = pageable.pageNumber * this.state.pageSize + 1;\r\n          let updatedData = {\r\n            orderTableData: {\r\n              rows,\r\n              columns: [...this.getOrderTableColumns()],\r\n            },\r\n            pageSize: pageable.pageSize,\r\n            totalCounts: res.data.totalElements,\r\n            startEntry: startEntry,\r\n            pageNo: pageable.pageNumber,\r\n            totalPages: res.data.totalPages,\r\n            isGetLoading: false,\r\n          };\r\n          updatedData.searchValue = req.searchValue || \"\";\r\n          if (req.sortAs && req.sortBy) {\r\n            updatedData[\"sortBy\"] = req.sortBy;\r\n            updatedData[\"sortAs\"] = req.sortAs;\r\n          }\r\n          this.setState({ ...updatedData });\r\n        }, 1500);\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      totalCounts,\r\n      startEntry,\r\n      pageSize,\r\n      pageNo,\r\n      totalPages,\r\n      isGetLoading,\r\n      orderTableData,\r\n      sortBy,\r\n      sortAs,\r\n      searchValue,\r\n      isAlertDialogOpen = false,\r\n      isAlertDialogLoading = false,\r\n      alertDialogTitle = \"Confirmation\",\r\n      content = \"Do you really Want to Proceed?\",\r\n      isAddOrderQuantityModalOpen = false,\r\n      isOrderQuantityHistoryModalOpen = false,\r\n      orderHistoryId = undefined,\r\n    } = this.state;\r\n    return (\r\n      <Grid container spacing={gridSpacing}>\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>\r\n                <div className={\"d-flex\"}>\r\n                  <h5 className=\"table-title\">Manage Order</h5>\r\n                  {/*<Button*/}\r\n                  {/*  variant=\"contained\"*/}\r\n                  {/*  color=\"primary\"*/}\r\n                  {/*  className={\"ms-auto\"}*/}\r\n                  {/*  disableElevation*/}\r\n                  {/*>*/}\r\n                  {/*  Add Order*/}\r\n                  {/*</Button>*/}\r\n                </div>\r\n              </Card.Title>\r\n              <Divider />\r\n              <DataTable\r\n                totalCounts={totalCounts}\r\n                startEntry={startEntry}\r\n                pageSize={pageSize}\r\n                pageNo={pageNo}\r\n                totalPages={totalPages}\r\n                isGetLoading={isGetLoading}\r\n                tableData={orderTableData}\r\n                tableHeaders={this.getOrderTableColumns()}\r\n                sortedColumn={[]}\r\n                sortBy={sortBy}\r\n                sortAs={sortAs}\r\n                searchValue={searchValue}\r\n                callListAPI={this.getOrderList}\r\n              />\r\n            </Card.Body>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageOrdersPage;\r\n"],"sourceRoot":""}